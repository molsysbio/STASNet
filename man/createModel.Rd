% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_model.R
\name{createModel}
\alias{createModel}
\title{Creates and fits a parameterised model from experimental data, network structure and basal activity information.}
\usage{
createModel(
  model_links,
  basal_file,
  data.stimulation,
  data.variation = "",
  nb_cores = 1,
  inits = 1000,
  perform_plots = F,
  precorrelate = T,
  method = "geneticlhs",
  unused_perturbations = c(),
  unused_readouts = c(),
  MIN_CV = 0.1,
  DEFAULT_CV = 0.3,
  model_name = "default",
  optimizer = "levmar",
  data_space = "linear"
)
}
\arguments{
\item{model_links}{Path to the file containing the network structure, either in matrix form or in list of links form. Extension .tab expected}

\item{basal_file}{Path to the file indicating the nodes with basal activity. Extension .dat expected.}

\item{data.stimulation}{Path to the file containing the data in MRA_MIDAS format. Extension .csv expected.}

\item{data.variation}{Path to the file containing the coefficient of variation for each measurement in MRA_MIDAS format. If it is not provided, the function uses the replicates of the data.stimulation file to determine a variance per probe (i.e antibody/DNA fragment/...). Extension .var expected.}

\item{nb_cores}{Number of cores that should be used for the computation}

\item{inits}{Number of initialisation steps which should be performed (see method for the exact meaning of this value)}

\item{perform_plots}{Whether the distribution of the residuals and the correlation plots for the parameters deduced by correlation should be plotted or not}

\item{precorrelate}{Whether to infer some links using a linear model instead of a random initialisation}

\item{method}{Method to be used for the initialisation, available methods are :
random : Perform a Latin Hypercube Sampling to choose \emph{inits} starting points then perform a gradient descent to find the local optimum for each of those points.
correlation : Deduce some parameters from the correlation between the measurements for the target node and all of its input nodes, then perform random to find the other parameters. Recommended, very efficient for small datasets.
genetic : Genetic algorithm with mutation only. \emph{inits} is the total number of points sampled.
annealing : Simulated annealing and gradient descent on the best result. \emph{inits} is the maximum number of iteration without any change before the algorithm decides it reached the best value. Use not recommended.}

\item{unused_perturbations}{Perturbations in the dataset that should not be used}

\item{unused_readouts}{Measured nodes in the datasets that should not be used}

\item{MIN_CV}{Minimum coefficient of variation.}

\item{DEFAULT_CV}{Default coefficient of variation to use when none is provided and there are no replicated in the data.}

\item{model_name}{The name of the model is derived from the name of the data.stimulation file name. If data.stimulation is a matrix or a data.frame, 'model_name' will be used to name the model.}

\item{optimizer}{One of c('levmar', 'siman', 'hybrid', 'gradsim', 'simgrad') to choose whether the optimizer should use the Levenberg-Marquardt algorithm, Simulated Annealing or an hybrid alternating between the two with gradiend first ('gradsim') or simulated annealing firest ('simgrad').}

\item{data_space}{One of "log" or "linear". Determines whether the data should be fitted in log space or linear space. The parameters will be in log space in both cases, but the log space data might be more adapted if the data are log-normal (as opposed to normal assumed by the linear option).}
}
\value{
An MRAmodel object describing the model and its best fit, containing the data
}
\description{
Creates and fits a parameterised model from experimental data, network structure and basal activity information.
}
\examples{
\dontrun{
model = createModel("links.tab", "basal.dat", "data_MIDAS.csv") # Produces a model for the network described in links.tab using the data in data_MIDAS.csv
model = createModel("links.tab", "basal.dat", "data_MIDAS.csv", "variation.var") # Uses the variation from a variation file
model = createModel("links.tab", "basal.dat", "data_MIDAS.csv", nb_cores = detectCores()) # Uses all cores available (with the package parallel)
model = createModel("links.tab", "basal.dat", "data_MIDAS.csv", inits = 1000000) # Uses more initialisations for a complex network
}
}
\seealso{
importModel, exportModel, rebuildModel

Other Model initialisation: 
\code{\link{initModel}()}
}
\author{
Mathurin Dorel \email{dorel@horus.ens.fr}
}
\concept{Model initialisation}
